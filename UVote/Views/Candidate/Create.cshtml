@model UVote.Models.CandidateModel
@{
    ViewBag.Title = "Add candidate";
}

<h2>Add candidate</h2>
@using (Html.BeginForm("Create", "Candidate", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label("Campaign", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            @Html.DropDownList("CampaignChoice", "Select campaign")
                @Html.ValidationMessage("RoleTitle", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CandidateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CandidateId)
                @Html.ValidationMessageFor(model => model.CandidateId, "", htmlAttributes: new { @class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName, "", htmlAttributes: new { @class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Manifesto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Manifesto, htmlAttributes: new { @rows = 5, @cols = 50})
                @Html.ValidationMessageFor(model => model.Manifesto, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="ImageFile" name="ImageFile" required/>
                @Html.ValidationMessageFor(model => model.ImageUrl, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PreviousHistory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.PreviousHistory, htmlAttributes: new { @rows = 5, @cols = 50 })
                @Html.ValidationMessageFor(model => model.Manifesto, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.HiddenFor(model => model.EmployeeId, new { Value = Session["employeeId"] })
        </div>
        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <input type="submit" name="submit" class="btn btn-info" value="Create candidate" />
                <input type="reset" name="reset" class="btn btn-warning" value="Reset" />
            </div>
        </div>
    </div>
}
